<?php 

function custom_profile_form_form_alter(&$form, &$form_state, $form_id)
{
	if ($form_id == 'user_profile_form')	
	{	

		$form['actions']['#weight'] = -1000;
		$form['actions']['cancel']['#value'] = t('Delete Account');

		if(arg(0) == 'user' && arg(2) == 'edit' && arg(3) == '')
		{
			$form['submit']= array(
				'#type' => 'submit',
				'#value' => 'save',
				'#weight' => 1000
				);
			$form['submit']['#prefix'] = '<div id="edit-actions" class="form-actions wrapper">';
			$form['submit']['#suffix'] = '</div>';    
		}
		
		if(arg(3)=='plan_content')
		{
			$form['profile_plan_content']['submit'] = array(
				'#type' => 'submit',
				'#value' => 'save',
				'#weight' => 1000
				);
			$form['profile_plan_content']['submit']['#prefix'] = '<div id="edit-actions" class="form-actions wrapper">';
			$form['profile_plan_content']['submit']['#suffix'] = '</div>';    
		}

		if(arg(3)=='learner_profile')
		{
			$form['profile_learner_profile']['submit'] = array(
				'#type' => 'submit',
				'#value' => 'save',
				'#weight' => 1000
				);
			$form['profile_learner_profile']['submit']['#prefix'] = '<div id="edit-actions" class="form-actions wrapper">';
			$form['profile_learner_profile']['submit']['#suffix'] = '</div>';    
		}
		if(arg(3)=='exit_information')
		{
			$form['profile_exit_information']['submit'] = array(
				'#type' => 'submit',
				'#value' => 'save',
				'#weight' => 1000
				);
			$form['profile_exit_information']['submit']['#prefix'] = '<div id="edit-actions" class="form-actions wrapper">';
			$form['profile_exit_information']['submit']['#suffix'] = '</div>';    
		}
		if(arg(3)=='follow_ups')
		{
			$form['profile_follow_ups']['submit'] = array(
			'#type' => 'submit',
			'#value' => 'save',
			'#weight' => 1000
			);
			$form['profile_follow_ups']['submit']['#prefix'] = '<div id="edit-actions" class="form-actions wrapper">';
			$form['profile_follow_ups']['submit']['#suffix'] = '</div>';    
		}
		

		global $user;
			
		if(in_array('practitioner', $user->roles))
		{
			unset($form['account']['pass']);

		}

		if(in_array('practitioner', $user->roles))
		{	

			$existing = user_load(arg(1));

			if(isset($existing->status))
			{	
				if($existing->status == 0)
				{
					unset($form['actions']);
					unset($form['submit']);
					unset($form['profile_learner_profile']['submit']);
					unset($form['profile_follow_ups']['submit']);
					unset($form['profile_exit_information']['submit']);
					unset($form['profile_plan_content']['submit']);
				}

			}
			
		}

		if(arg(0) == 'user' && arg(2) == 'edit' && arg(3) == '')
		{	
			if(isset($form['#user']->field_courses_4['und']))
			{	
				$courselist = '';

				if (!function_exists('in_array_r'))
				{
					function in_array_r($needle, $haystack, $strict = false) {
					    foreach ($haystack as $item) {
					        if (($strict ? $item === $needle : $item == $needle) || (is_array($item) && in_array_r($needle, $item, $strict))) {
					            return true;
					        }
					    }

					    return false;
					}
				}
				foreach ($form['#user']->field_courses_4['und'] as $key => $value) { 

				  	$cid = $value['target_id'];
				  	$nid = node_load($cid);
				  	$time_v = '';
					if(isset($nid->field_time['und']))
			  		{
			  			$count = count($nid->field_time['und']);
			  		}
			  		else
			  		{
			  			$count = '';
			  		}
				  	  	
				  	if(in_array_r($nid->nid, $form['#user']->field_courses_4) == true)
					{	
						foreach ($form['#user']->field_courses_live as $key => $value) {
							$id = [];
							$time = [];
							$group = [];
							foreach ($value as $key => $value) {
								
								  $data = explode(',', $value['value']);
								  $id1 = $data[0];
								  $time1 = $data[1];
								  $group1 = array('gp'=> array('id'=>$id1,'time'=>$time1));
								  array_push($group,$group1);

							}
						}
						if(isset($group))
						{
							foreach ($group as $key => $value) {
		                  	
		                  	if(in_array_r($nid->nid, $value))
							{   
								$time_v = $value['gp']['time'];
								break;
							}
							else
							{
								$time_v = '';
							}

		                  }
						}
					}
			
				  	if($nid->type == 'courses_live')
				  	{	
				  		
					  	$class_type = '('.$nid->field_type_of_class['und'][0]['value'].')';
					  
					  	$timestamp = strtotime($nid->field_time['und'][0]['value']); 
					  	$user_tz = new DateTimeZone('America/Toronto');  
						$offset = $user_tz->getOffset(new DateTime($nid->field_time['und'][0]['value']));
						$start_stamp = $timestamp + $offset;
			 	  		$time_n = format_date($start_stamp, 'custom', 'd/m/y h:i a');		 
				  	}
				  	else
				  	{
					  	$class_type = '';
					  	$time_n = '';
				  	}

					if($count>1 && $time_v != '')
					{
						$time = $time_v;
					}
					else
					{
						$time = $time_n;
					}
			
				  	$courselist .= $nid->title.' '.$class_type. ' <br>'.$time.PHP_EOL .'<hr>';
				}

				$form['account']['cList'] = array(
				'#type' => 'markup',
				'#markup' => '<div class="form-type-markup"><label>Courses List</label><div>'. $courselist .'</div></div>',
				'#weight' => 10
				);
			}
			$user_id = arg(1);

			$form['field_client_id']['und'][0]['markup']= array(
			'#type' => 'markup',
			'#markup' => '<div class="form-type-markup"><label>Client ID</label><div>'. $user_id .'</div></div>',
			'#weight' => 10
			);

			$profiles = profile2_load_by_user($form['#user']->uid,'learner_profile');

		
			if(isset($profiles->created))
			{
				$form['field_register_date']['und'][0]['markup']= array(
				'#type' => 'markup',
				'#markup' => '<div class="form-type-markup"><label>Registration Date</label><div>'. format_date($form['#user']->created, 'custom', 'd/m/Y H:ia').'</div></div>',
				'#weight' => 11
				);
			}
					
		}

		unset($form['account']['status']);	
	}
}


/*function custom_profile_form_node_update($node) 
{	
	
	$node = node_load($node->nid);

	$arr = $node->field_users_attending['und'];
	foreach ($arr as $key => $value) {
		
		print_r($value['target_id']);
		$uid = $value['target_id'];
		$existing = user_load($uid);

		if(in_array($node->nid, haystack))
		echo '<pre>';
		print_r($existing->field_courses_4['und']);
		echo '</pre>';
	}
	
}
*/

		